6.What is the octal representation of a file that can be read and written only by its owner?

answer: 0600

7.In UNIX systems, what is the common name of the special user that can access and modify every file?

answer: Root user

8.Which file permission classes are available in UNIX systems?

answer: user, group, other

9.As of 2020, which percentage of servers have UNIX-like OS?

answer: 40%

10.The command ssh will:

answer: The ssh command provides a secure encrypted connection between two hosts over an insecure network. 
This connection can also be used for terminal access, file transfers, and for tunneling other applications.

11.UNIX Command: access your current working directory

answer: $pwd

12.UNIX Command: rename files (give an example)

$mv filename1 filename2.
if the file is not in your current directory make sure to specify the full path of the file:
$mv /home/example1.txt /home/example2.txt

13.UNIX Command: schedule the execution of programs in the future

answer: crontab -e

14.UNIX Command: Forcefully shutdown the command with process ID 123

kill 123

15.UNIX Command:access your root user

sudo -s

16. Crontab scheduled: At minute 30 on Sunday.

30 * * * 7

17. Crontab scheduled: At minute 30 on day-of-month 15.

30 * 15 * *

18. Crontab scheduled: At 05:30 on every day-of-week from Sunday through Monday in June.

30 05 * 7 1-7

19.Script:printyour name and date

#!/bin/bash
read -p "Please enter your name: " name
NOW=$(date +"%m-%d-%y")
echo "Your name is: " $name "and the date is" $NOW

20.Script:add two numeric values, print the result

 #!/bin/bash
echo "please could you enter the first no"; read a
echo "please enter the second no"; read b
c=$((a+b))
echo "the answer is $c "

21.Script:inputs username, prints “USERNAMEstored”

#!/bin/bash
read -p "please put in your username " username
echo $username"stored"

22.Script:Store the output of the command “hostname” in a variable. 
Display “This script is running on _.” where “_” is the output of the “hostname” command.

#!/bin/bash
$hostname=`hostname`
echo "This script is running on" $hostname

23.Script:Store the output of the workingdirectory (from where the script is run) in a variable then print the variable.

#!/bin/bash
workingdirectory=`pwd`
echo "the working directory is" $workingdirectory

24.Create a step by step tutorial on how to create a cronjob that prints “Task scheduled at”+ DATE. 
Cronjob is scheduled every 30 minutes on today’s date(only today).

Answer: 
1) First open a terminal ex:(Ubuntu). Then type in sudo -s then enter, 
it will then ask you for your password you made when first starting ubuntu.
 this will let you start the cronjob later.
2) next you will type in crontab -e to open the crontab 
3) it will ask you to select an editor, choose number 1 (/bin/nano since its the easiest) type 1 then enter.
4) hold down the down-arrow until you past all the blue text then you can start writing your cronjob.
5) write in at the bottom: 30 * 25 11 * echo "Task scheduled at $(date) >> /home/example.txt
6) exit the crontab by typing ctrl+x
7)start the cronjob by typing service cron start

25.Create a script that takes an input (letter or number) that will display the answer of a question. 
The script should when started list a menu for the user with the different questions that can be chosen 
and which corresponding letter the user will have to give as input to display the answer of the desired question. 
One of the possible inputs the user should be able to make is "q" for quitting the script. 
The menu should also have a defaultcase where all the items is displayed again,
or no changes is made if the user gives an invalid input.Hint: use a switch case to be able to handle the menu. 
Each option in the menu should lead to an echo of the answer

answer:#!/bin/sh
for i in 123
do
echo "press 1 to see the capital in Norway (q to quit)"
echo "press 2 to see the capital in Sweden (q to quit)"
echo "press 3 to see the capital in Denmark (q to quit)"
while :
do
 read INPUT_STRING
 case $INPUT_STRING in
        1)
                echo "The capital in Norway is Oslo press 4 to see the questions again"
                ;;
        2)
                echo "The capital in Sweden is Stockholm press 4 to see the questions again"
                ;;
        3)
                echo "The capital in Denmark is Copenhagen press 4 to see the questions again "
                ;;
        q)
                break
                ;;
        4)
                echo "press 1 to see the capital in Norway (q to quit)"
                echo "press 2 to see the capital in Sweden (q to quit)"
                echo "press 3 to see the capital in Denmark (q to quit)"
                ;;
        *)
                echo "You did not enter a valid command press 4 to see the questions again or q to quit"
                ;;
 esac
done
done
